% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{dmdrDense}
\alias{dmdrDense}
\title{Distributed Mean Dimension Reduction with Dense Solutions}
\usage{
dmdrDense(data, machines, d, maxIter = 1000L, tol = 1e-06, useParallel = FALSE)
}
\arguments{
\item{data}{A numeric matrix where the last column is the response variable and preceding columns are predictors.}

\item{machines}{Integer specifying the number of machines for computation.}

\item{d}{Integer indicating the reduced dimension for parameter estimation.}

\item{maxIter}{Maximum number of iterations (default: 1000).}

\item{tol}{Convergence tolerance for parameter updates (default: 1e-6).}
}
\value{
A numeric matrix containing the final estimated reduced-rank coefficient matrix.
}
\description{
Performs distributed parameter estimation using data partitioned across multiple machines.
Iteratively updates parameters by computing local scores and Hessian matrices, combining them to refine estimates.
}
\details{
The data is partitioned across \code{machines}, and local computations are performed to estimate scores and Hessians.
These are aggregated to iteratively refine global parameter estimates. Bandwidths \code{h1}, \code{h2}, and \code{h3} are updated
dynamically based on the partition size \code{n} as \eqn{n^{-1 / (4 + d)}}. The algorithm converges when parameter changes
fall below \code{tol}. Singular value decomposition (SVD) is applied to the final matrix to ensure stability and interpretability.
}
